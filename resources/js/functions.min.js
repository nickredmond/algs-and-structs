/**
	Various sorting algorithms for lists of non-negative integers
*/
var merge_sort = function(list, step_callback) {

};
var bubble_sort = function(list, step_callback) {

};
var insertion_sort = function(list, step_callback) {

};
var selection_sort = function(list, step_callback) {

};
var bucket_sort = function(list, step_callback) {
	var maxValue = 0;
	for (var i = 0; i < list.length; i++) {
		maxValue = Math.max(maxValue, list[i]);
	}
	step_callback({ "max_value": maxValue });

	var buckets = Array(maxValue + 1).fill(0);
	for (var i = 0; i < list.length; i++) {
		var bucketIndex = list[i];
		buckets[bucketIndex] += 1;
	}
	step_callback({ "buckets": buckets })

	var sortedList = [];
	for (var i = 0; i < buckets.length; i++) {
		var bucketCount = buckets[i];
		for (var j = 0; j < bucketCount; j++) {
			sortedList.push(i);
			step_callback({ "sorted_list": sortedList });
		}
	}

	return sortedList;
};

console.log("--- BUCKET SORT ---")
var list = [3, 2, 5, 0, 1, 9, 1, 8, 8, 8, 7];
console.log("LIST: " + JSON.stringify(list));
var result = bucket_sort(list, function(data) {
	console.log(JSON.stringify(data));
});
console.log("RESULT: " + JSON.stringify(result));
console.log("");